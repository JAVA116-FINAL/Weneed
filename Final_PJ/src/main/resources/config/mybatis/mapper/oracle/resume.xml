<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.mapper.oracle.resume">

	<!-- 안되면 oracle useGenerate true로 바꾸고, update처리 cart=>orderDetails -->
	<update id="insertResume" parameterType="resumeVo">
		<selectKey keyProperty="resumeNo" resultType="int" order="BEFORE">
			select resume_seq.nextval from dual
		</selectKey>
		insert into resume(resume_No, mem_no, resume_Title,resume_Name, resume_Email,resume_Hp, temp_flag, lang_flag)
		select #{resumeNo},mem_No,name||#{resumeNo},name,email, hp,'Y','KR' 
		from memberInfo 
		where mem_no=#{memNo}		
	</update>
	<!-- 등록누르자마자 인서트된 가장 최신 이력서 셀렉트 -->
	<select id="selectResume" parameterType="int" resultType="resumeVo">
		select * from 
		(select * from resume where mem_No=#{memNo} order by resume_no desc)
		where rownum=1
	</select>
	<!-- 등록버튼 누르면 insert-select했던 이력서 업뎃 -->
	<update id="updateResume" parameterType="resumeVo">
		update resume 
		set resume_Title= #{resumeTitle} ,resume_Name=#{resumeName} ,resume_Email=#{resumeEmail},
		 	resume_Hp=#{resumeHp}, resume_Introduce=#{resumeIntroduce},temp_Flag=#{tempFlag},resume_Regdate=sysdate,
		 	lang_flag=#{langFlag},resume_Length=#{resumeLength}<!-- , resume_regdate=sysdate -->
		where resume_No=#{resumeNo}
	</update>
	<!-- 이력서 관리 조회 -->
	<select id="selectResumeAll" parameterType="int" resultType="resumeVo">
		select * from resume where mem_No=#{memNo} order by resume_No desc
	</select>
	
	<!-- 이력서 번호로 조회 회원번호도 넣을까?-->
	<select id="selectResumeOne" parameterType="resumeVo" resultType="resumeVo">
		select * from resume where resume_No=#{resumeNo} and mem_No=${memNo}
	</select>
	
	<!-- 파일업로드 업뎃 -->
	<update id="insertResumeFile" parameterType="resumeVo">
		<selectKey keyProperty="resumeNo" resultType="int" order="BEFORE">
			select resume_seq.nextval from dual
		</selectKey>
		insert into resume(resume_No, mem_no, resume_Title,resume_Name, resume_Email,resume_Hp, temp_flag, resume_File, resume_Upfileflag)
		select #{resumeNo},mem_No,#{resumeFile},name,email, hp,'N',#{resumeFile},'Y' 
		from memberInfo 
		where mem_no=#{memNo}		
	</update>
	
	<delete id="deleteResume" parameterType="resumeVo" >
		delete from resume where mem_No=#{memNo} and resume_No=#{resumeNo}
	</delete>

	<!-- 관리자-전체 이력서 조회 -->
	<!-- <select id="selectResumeAllbyAdmin" resultType="resumeVo">
		select * from resume  order by resume_No desc
	</select> -->
 	<sql id="searchWherer">
 		<where>
 			<if test="searchKeyword !null and searchKeyword !=''">
 				${searchCondition} like '%'|| #{searchKeyword}||'%'
 			</if>
 		</where>
 	</sql>
 	
	<select id="selectResumeAllbyAdmin" resultType="map" parameterType="searchVo">
		select* from(
		select A.*,rownum as Rnum
		from
		(
		    select r.resume_no, r.mem_No,r.resume_Title, r.resume_Name, r.resume_Email, r.resume_hp,
		   	r.temp_flag, r.resume_Regdate,
		    c.CAREER_NAME, c.career_Dep, e.edu_Name, e.edu_Major, l.LANG_NAME, l.lang_level,
		    ai.add_Name,
		    row_number() over(partition by c.resume_no order by c.resume_no) as firstResume
		    from resume r  join career c
		    on r.resume_No=c.resume_No
		    left outer join education e 
		    on c.resume_No=e.resume_No
		    left outer join languages l
		    on e.resume_No=l.resume_No
		    left outer join addInformatiod ai
		    on l.resume_No=ai.resume_No
		    left outer join link lk
		    on ai.resume_No=lk.resume_No
		    order by resume_No desc   
		)A
		where firstResume=1 
		<if test="searchKeyword != null and searchKeyword != ''">
			and RESUME_NO like '%' || #{searchKeyword} || '%' or MEM_NO like '%' || #{searchKeyword} || '%' or resume_Name like '%' || #{searchKeyword} || '%' or resume_Title like '%' || #{searchKeyword} || '%' 
			or career_Name like '%' || #{searchKeyword} || '%' or career_Dep like '%' || #{searchKeyword} || '%'
			or edu_Name like '%' || #{searchKeyword} || '%' or edu_Major like '%' || #{searchKeyword} || '%' or temp_Flag=#{searchKeyword} 
		</if>
		) 
	  <![CDATA[
     	where RNUM > #{firstRecordIndex} 
      	and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
      ]]>
	</select>
	
	<select id="selectTotalRecord" parameterType="searchVo" resultType="int">
		select count(*)
		from
		(
		    select r.resume_no, r.mem_No,r.resume_Title, r.resume_Name, r.resume_Email, r.resume_hp,
		   	r.temp_flag, r.resume_Regdate,
		    c.CAREER_NAME, c.career_Dep, e.edu_Name, e.edu_Major, l.LANG_NAME, l.lang_level,
		    ai.add_Name,
		    row_number() over(partition by c.resume_no order by c.resume_no) as firstResume
		    from resume r  join career c
		    on r.resume_No=c.resume_No
		    left outer join education e 
		    on c.resume_No=e.resume_No
		    left outer join languages l
		    on e.resume_No=l.resume_No
		    left outer join addInformatiod ai
		    on l.resume_No=ai.resume_No
		    left outer join link lk
		    on ai.resume_No=lk.resume_No
		    order by resume_No desc   
		)A
		where firstResume=1
		
		<if test="searchKeyword != null and searchKeyword != ''">
			and RESUME_NO like '%' || #{searchKeyword} || '%' or MEM_NO like '%' || #{searchKeyword} || '%' or resume_Name like '%' || #{searchKeyword} || '%' or resume_Title like '%' || #{searchKeyword} || '%' 
			or career_Name like '%' || #{searchKeyword} || '%' or career_Dep like '%' || #{searchKeyword} || '%'
			or edu_Name like '%' || #{searchKeyword} || '%' or edu_Major like '%' || #{searchKeyword} || '%' or temp_Flag=#{searchKeyword} 
		</if>
	</select>
	

	<!-- 현빈 매치업에서 이력서 그려주기용 -->	
	<select id="selectResumeByResumeNo" parameterType="int" resultType="resumeVo">
		select * from resume where resume_no=#{resumeNo}
	</select>
	
	<update id="insertMcuResume" parameterType="resumeVo">
		<selectKey keyProperty="resumeNo" resultType="int" order="BEFORE">
			select resume_seq.nextval from dual
		</selectKey>
		insert into resume(resume_No, mem_no, resume_Title,resume_Name, resume_Email,resume_Hp, resume_Introduce, temp_flag, lang_flag,resume_Length )
		select #{resumeNo},mem_No,name||#{resumeNo},name,email, hp,#{resumeIntroduce},'Y','KR',#{resumeLength} 
		from memberInfo 
		where mem_no=#{memNo}		
	</update>

	<!-- 0210 -->
	
	<select id="selectResumeOnebyResumeNo" parameterType="int" resultType="resumeVo">
		select * from resume where resume_No=#{resumeNo}
	</select>
	
	<update id="updateResumeIntroduce">
		update resume 
		set resume_regdate=sysdate, resume_introduce=#{resumeIntroduce}, resume_Length=#{resumeLength}  
		where resume_No=#{resumeNo}
	</update>
	
</mapper>









